<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cc</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.ccblog.win/"/>
  <updated>2017-06-06T04:25:27.714Z</updated>
  <id>http://www.ccblog.win/</id>
  
  <author>
    <name>cc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>bootstrap解析-栅格系统</title>
    <link href="http://www.ccblog.win/2017/06/06/bootstrap%E8%A7%A3%E6%9E%90-%E6%A0%85%E6%A0%BC%E7%B3%BB%E7%BB%9F/"/>
    <id>http://www.ccblog.win/2017/06/06/bootstrap解析-栅格系统/</id>
    <published>2017-06-06T04:15:23.000Z</published>
    <updated>2017-06-06T04:25:27.714Z</updated>
    
    <content type="html"><![CDATA[<h1 id="bootstrap解析-栅格系统"><a href="#bootstrap解析-栅格系统" class="headerlink" title="bootstrap解析-栅格系统"></a>bootstrap解析-栅格系统</h1><h3 id="container-布局容器"><a href="#container-布局容器" class="headerlink" title=".container(布局容器)"></a>.container(布局容器)</h3><h5 id="屏幕宽1200px以上（col-lg）"><a href="#屏幕宽1200px以上（col-lg）" class="headerlink" title="屏幕宽1200px以上（col-lg）"></a>屏幕宽1200px以上（col-lg）</h5><ol>
<li>默认width为1170px</li>
<li>padding,lefet和right各为15px,所以内容width为1140px;</li>
</ol>
<h5 id="屏幕宽992px以上-col-md"><a href="#屏幕宽992px以上-col-md" class="headerlink" title="屏幕宽992px以上(col-md)"></a>屏幕宽992px以上(col-md)</h5><ol>
<li>默认width为970px</li>
<li>padding,lefet和right各为15px,所以内容width为940px;</li>
</ol>
<h5 id="屏幕宽768px以上-col-sm"><a href="#屏幕宽768px以上-col-sm" class="headerlink" title="屏幕宽768px以上(col-sm)"></a>屏幕宽768px以上(col-sm)</h5><ol>
<li>默认width为750px</li>
<li>padding,lefet和right各为15px,所以内容width为720px;</li>
</ol>
<h5 id="屏幕宽768px以下-col-xs"><a href="#屏幕宽768px以下-col-xs" class="headerlink" title="屏幕宽768px以下(col-xs)"></a>屏幕宽768px以下(col-xs)</h5><ol>
<li>默认width为100%</li>
<li>padding,lefet和right各为15px,所以内容width为100%-30px;</li>
</ol>
<h3 id="container-fluid-流式布局容器"><a href="#container-fluid-流式布局容器" class="headerlink" title=".container-fluid(流式布局容器)"></a>.container-fluid(流式布局容器)</h3><ol>
<li>width为100%</li>
<li>其他和.container一样</li>
</ol>
<h3 id="row-行"><a href="#row-行" class="headerlink" title=".row(行)"></a>.row(行)</h3><ol>
<li>默认margin-left和margin-right为-15px;</li>
<li>这样就抵消掉了.container的padding,row的显示区域width就为.container的width了</li>
<li>利用::after清楚浮动</li>
</ol>
<h3 id="col-列"><a href="#col-列" class="headerlink" title=".col-(列)"></a>.col-(列)</h3><ol>
<li>用@media来设置width对应百分比</li>
<li>padding,lefet和right各为15px</li>
<li>float:left</li>
<li>position:relative</li>
<li>min-height:1px</li>
</ol>
<h3 id="col-offset-移动"><a href="#col-offset-移动" class="headerlink" title=".col-*-offset-(移动)"></a>.col-*-offset-(移动)</h3><ol>
<li>利用@media来设置margin-left相应的百分比</li>
</ol>
<h3 id="col-push-和-col-pull-列排序"><a href="#col-push-和-col-pull-列排序" class="headerlink" title=".col--push-和.col--pull-(列排序)"></a>.col-<em>-push-和.col-</em>-pull-(列排序)</h3><ol>
<li>由于col-设置了posistion:relative所以通过设置left(push)和righ(pull)来改变节点的位置。</li>
</ol>
<h3 id="其他情况"><a href="#其他情况" class="headerlink" title="其他情况"></a>其他情况</h3><h4 id="列的高度不同时"><a href="#列的高度不同时" class="headerlink" title="列的高度不同时"></a>列的高度不同时</h4><h5 id="解决-clearfix-清除浮动"><a href="#解决-clearfix-清除浮动" class="headerlink" title="解决 .clearfix(清除浮动)"></a>解决 .clearfix(清除浮动)</h5><ol>
<li>由于列都浮动了，所以阈值时会产生一些问题，所需要配合清除相应位置的浮动来解决</li>
</ol>
<h4 id="列大于12时"><a href="#列大于12时" class="headerlink" title="列大于12时"></a>列大于12时</h4><ol>
<li>由于列浮动了，所以超出的列会自动换行排列</li>
</ol>
<h4 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h4><ol>
<li>由于以上属性设置，所以嵌套写.row和.col-就可以</li>
</ol>
<p>bootstrap的栅格系统基本就是这些，所以也没什么神秘的，你自己也完全可以写出自己的栅格系统来。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;bootstrap解析-栅格系统&quot;&gt;&lt;a href=&quot;#bootstrap解析-栅格系统&quot; class=&quot;headerlink&quot; title=&quot;bootstrap解析-栅格系统&quot;&gt;&lt;/a&gt;bootstrap解析-栅格系统&lt;/h1&gt;&lt;h3 id=&quot;container
    
    </summary>
    
      <category term="bootstrap解析" scheme="http://www.ccblog.win/categories/bootstrap%E8%A7%A3%E6%9E%90/"/>
    
    
      <category term="bootstrap" scheme="http://www.ccblog.win/tags/bootstrap/"/>
    
      <category term="css" scheme="http://www.ccblog.win/tags/css/"/>
    
      <category term="html" scheme="http://www.ccblog.win/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>hexo主题配置conci</title>
    <link href="http://www.ccblog.win/2017/06/01/hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AEconci/"/>
    <id>http://www.ccblog.win/2017/06/01/hexo主题配置conci/</id>
    <published>2017-06-01T11:01:23.000Z</published>
    <updated>2017-06-02T02:47:32.808Z</updated>
    
    <content type="html"><![CDATA[<h2 id="继续叨叨叨"><a href="#继续叨叨叨" class="headerlink" title="继续叨叨叨"></a>继续叨叨叨</h2><p>之前介绍了hexo的安装和部署（还没部署的小伙伴<a href="http://www.ccblog.win/2017/03/12/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/">点这里</a>)，这篇咱们接着介绍怎么应用主题。</p>
<h2 id="conci主题-github"><a href="#conci主题-github" class="headerlink" title="conci主题(github)"></a>conci主题(<a href="https://github.com/cspp01/concise" target="_blank" rel="external">github</a>)</h2><p>这里主要是配置的conci主题</p>
<h3 id="下载conci"><a href="#下载conci" class="headerlink" title="下载conci"></a>下载conci</h3><p>hexo的主题都存放在themes文件夹下，在themes文件夹下右键Git bash Here，输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/cspp01/concise.git</div></pre></td></tr></table></figure></p>
<p>然后在主_config.yml文件中找到theme字段改为concise。</p>
<h3 id="安装scss预编译插件"><a href="#安装scss预编译插件" class="headerlink" title="安装scss预编译插件"></a>安装scss预编译插件</h3><p>由于我是用的是scss写的css代码，所以先安装sass插件。在主根目录下右键Git bash Here，输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-renderer-sass --save</div></pre></td></tr></table></figure></p>
<h3 id="安装自定义页面的插件"><a href="#安装自定义页面的插件" class="headerlink" title="安装自定义页面的插件"></a>安装自定义页面的插件</h3><p>在主根目录下右键Git bash Here，输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-mypage --save</div></pre></td></tr></table></figure></p>
<p>然后在主_config.yml中添加如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mypage:</div><div class="line"> tags/index.html: tags</div><div class="line"> categories/index.html: categories</div><div class="line"> about.html: about</div></pre></td></tr></table></figure></p>
<p>基本条件已经OK，可以预览了。输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo s -debug</div></pre></td></tr></table></figure></p>
<p>在本地预览调试看看是否应用成功。</p>
<h2 id="conci基本配置"><a href="#conci基本配置" class="headerlink" title="conci基本配置"></a>conci基本配置</h2><h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><p>在主题配置文件中找到my_img字段.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">my_img: http://ooa3lxrpg.bkt.clouddn.com/b.jpg?imageView2/1/w/120/h/120/q/75 //地址（云存储对应头像的地址）也可放在本地，不过推荐放云端存储。</div></pre></td></tr></table></figure></p>
<h3 id="添加logo"><a href="#添加logo" class="headerlink" title="添加logo"></a>添加logo</h3><p>在主题配置文件中找到logo字段<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">logo: conci <span class="comment">#&lt;img src="./logo.png"&gt;//可以是字符也可以是图片如(&lt;img src="你的logo地址"&gt;)</span></div></pre></td></tr></table></figure></p>
<h3 id="添加favicon"><a href="#添加favicon" class="headerlink" title="添加favicon"></a>添加favicon</h3><p>把主题\source文件夹下的favicon.ico替换或者在主题配置文件中找到favicon字段把地址换成你的地址<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">favicon: /favicon.ico</div></pre></td></tr></table></figure></p>
<h3 id="配置展示信息"><a href="#配置展示信息" class="headerlink" title="配置展示信息"></a>配置展示信息</h3><p>找到inf字段来对应设置你要展示的信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">inf:</div><div class="line">  name: conci.theme</div><div class="line">  superscript: hexo//上标字段</div><div class="line">  describe:</div><div class="line">    one: conci version 1.0.0//第一行信息</div><div class="line">    two: Simple and practical hexo personal blog theme.//第2行信息</div><div class="line">    three: The freedom to choose//第3行信息</div></pre></td></tr></table></figure></p>
<h3 id="配置社交账号地址"><a href="#配置社交账号地址" class="headerlink" title="配置社交账号地址"></a>配置社交账号地址</h3><p>找到my_social字段来对应设置你要展示的信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">my_social:</div><div class="line">  github: https://github.com/cspp01</div><div class="line">  twitter: /</div><div class="line">  weibo: http://weibo.com/5262373626/profile?topnav=1&amp;wvr=6&amp;is_all=1</div><div class="line">  豆瓣: http://douban.com/people/160374034/</div><div class="line">  知乎: http://www.zhihu.com/people/cc-chen-4-85</div></pre></td></tr></table></figure></p>
<h3 id="配置友情链接"><a href="#配置友情链接" class="headerlink" title="配置友情链接"></a>配置友情链接</h3><p>找到my_links字段来按格式设置，要设置几个友情链接就设置几个<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">my_links:</div><div class="line">  ccblog1://友情链接名字</div><div class="line">    href: //友情链接地址</div><div class="line">    img: http://ooa3lxrpg.bkt.clouddn.com/timg.jpg//友情链接头像地址</div><div class="line">  ccblog2://友情链接名字</div><div class="line">    href: //友情链接地址</div><div class="line">    img: http://ooa3lxrpg.bkt.clouddn.com/timg.jpg//友情链接头像地址</div></pre></td></tr></table></figure></p>
<h3 id="配置首页文章简介字符数"><a href="#配置首页文章简介字符数" class="headerlink" title="配置首页文章简介字符数"></a>配置首页文章简介字符数</h3><p>找到index_pagelength字段设置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">index_pagelength: 200//字符数</div></pre></td></tr></table></figure></p>
<h3 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h3><p>找到reward字段设置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">reward:</div><div class="line">  open: <span class="literal">true</span>//[<span class="literal">true</span>(开启)|<span class="literal">false</span>(关闭)]</div><div class="line">  weixing: http://ooa3lxrpg.bkt.clouddn.com/wx.jpg?imageView2/2/w/180 <span class="comment">#你的微信收钱二维码图片地址</span></div><div class="line">  alipay: http://ooa3lxrpg.bkt.clouddn.com/zfb.jpg?imageView2/2/w/180 <span class="comment">#你的支付宝收钱二维码图片地址</span></div></pre></td></tr></table></figure></p>
<h3 id="自定义侧边栏位置"><a href="#自定义侧边栏位置" class="headerlink" title="自定义侧边栏位置"></a>自定义侧边栏位置</h3><p>找到sidebar字段设置，注意两个属性的值必须相反<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sidebar:</div><div class="line">  content: left//内容位置[left|right]</div><div class="line">  my: right//侧边栏位置[left|right]</div></pre></td></tr></table></figure></p>
<h2 id="文章属性配置"><a href="#文章属性配置" class="headerlink" title="文章属性配置"></a>文章属性配置</h2><p>在source /\ _posts下的文章中在两个- - -之间添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: hexo的next主题配置和优化</div><div class="line">date: 2017-06-1 08:15:23</div><div class="line">tags: [<span class="string">'hexo'</span>,<span class="string">'next'</span>,<span class="string">'css'</span>] //hexo和next就是标签，你可以写任何关于你文章名字的标签</div><div class="line">categories: hexo博客搭建 //分类</div><div class="line">pho: http://ooa3lxrpg.bkt.clouddn.com/11.jpg //首页展示图片地址，未配置的话会显示默认图片</div><div class="line">---</div></pre></td></tr></table></figure></p>
<p>今天基本就写到这里了，希望对你们有帮助。<br>下一篇介绍怎么开启conci主题的评论，搜索，分享，rss,阅读数统计等。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;继续叨叨叨&quot;&gt;&lt;a href=&quot;#继续叨叨叨&quot; class=&quot;headerlink&quot; title=&quot;继续叨叨叨&quot;&gt;&lt;/a&gt;继续叨叨叨&lt;/h2&gt;&lt;p&gt;之前介绍了hexo的安装和部署（还没部署的小伙伴&lt;a href=&quot;http://www.ccblog.win/201
    
    </summary>
    
      <category term="hexo主题" scheme="http://www.ccblog.win/categories/hexo%E4%B8%BB%E9%A2%98/"/>
    
    
      <category term="hexo" scheme="http://www.ccblog.win/tags/hexo/"/>
    
      <category term="conci" scheme="http://www.ccblog.win/tags/conci/"/>
    
      <category term="hexo主题" scheme="http://www.ccblog.win/tags/hexo%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>jquery显示隐藏常用方式性能测试报告</title>
    <link href="http://www.ccblog.win/2017/05/31/jquery%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E5%B8%B8%E7%94%A8%E6%96%B9%E5%BC%8F%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A/"/>
    <id>http://www.ccblog.win/2017/05/31/jquery显示隐藏常用方式性能测试报告/</id>
    <published>2017-05-31T12:30:23.000Z</published>
    <updated>2017-06-01T05:19:56.347Z</updated>
    
    <content type="html"><![CDATA[<p>其实我一直就听别人说如果要显示隐藏尽量不要用hide()和show(),其实一直也没实际测试过，因为自己想当然的也以为，毕竟hide()和show()jquery底层要经过不少判断。今天不知怎么得对他们的性能一直很在意，于是就简单做了如下测试</p>
<p>下面测试了对10000个相同div节点的显示隐藏，测试方法使用了console.time()和console.timeEnd,测试浏览器为谷歌（其它的还没测试）</p>
<p>先来hide()和show()的测试截图</p>
<p><img src="http://ooa3lxrpg.bkt.clouddn.com/.hide.png" alt="Alt text"></p>
<p>还好，没想象中那么差</p>
<p>addClass()和removeClass()的测试截图</p>
<p><img src="http://ooa3lxrpg.bkt.clouddn.com/内网通截图20170531200610.png" alt="Alt text"></p>
<p>也没比上面的好多少吗</p>
<p>.css({‘display’:’none’})和.css({‘display’:’block’})的测试截图</p>
<p><img src="http://ooa3lxrpg.bkt.clouddn.com/.css.png" alt="Alt text"></p>
<p>也不错</p>
<p>toggle()的测试截图</p>
<p><img src="http://ooa3lxrpg.bkt.clouddn.com/toggle.png" alt="Alt text"></p>
<p>好吧，果断抛弃你</p>
<p>从上面的测试来看hide()和show()相对于其它来看确实性能上会差点，但也没想象中那么差，其实一开始只是测试的对一个节点的显示隐藏，由于差别太小（但其实也可以发现hide()和show()性能会差点），所以多加了些节点来测试的。<br>所以hide()和show()其实也是可以放心实用的,但总的来说还是使用addClass可能会更好点。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实我一直就听别人说如果要显示隐藏尽量不要用hide()和show(),其实一直也没实际测试过，因为自己想当然的也以为，毕竟hide()和show()jquery底层要经过不少判断。今天不知怎么得对他们的性能一直很在意，于是就简单做了如下测试&lt;/p&gt;
&lt;p&gt;下面测试了对10
    
    </summary>
    
      <category term="jquery" scheme="http://www.ccblog.win/categories/jquery/"/>
    
    
      <category term="jquery" scheme="http://www.ccblog.win/tags/jquery/"/>
    
      <category term="javascript" scheme="http://www.ccblog.win/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>css,html填坑路</title>
    <link href="http://www.ccblog.win/2017/05/05/html,css%E5%A1%AB%E5%9D%91%E8%B7%AF/"/>
    <id>http://www.ccblog.win/2017/05/05/html,css填坑路/</id>
    <published>2017-05-05T00:15:23.000Z</published>
    <updated>2017-06-01T05:20:02.453Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前端填坑路"><a href="#前端填坑路" class="headerlink" title="前端填坑路"></a>前端填坑路</h3><h4 id="1-外边距合并"><a href="#1-外边距合并" class="headerlink" title="1.外边距合并"></a>1.外边距合并</h4><p>例子：<br>1.子元素设置margin-top;父元素不设置margin-top;,但父元素会出现上边距，子元素相对父元素却不会出现。<br> 2.同级元素上面那个设置margin-bottom：下面那个设置margin-top:可是中间的间距却不是两个边距的和。<br>原因：<br>这个是css默认行为，因为元素没有找到另一个那个元素的边界，只在垂直方向的外边距合并，合并为边距中最大的那个，水平方向的不会，目的只是为了文档美观性（如：在文段落中间如果不合并就会出现两倍的边距，看起来不美观。），而且只发生在文档流中的块级元素，如果是行内块，浮动，和定位则不会合并。<br>解决：<br>1.1父元素设置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">overflow:hidden/auto;</div></pre></td></tr></table></figure></p>
<p>1.2父元素设置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">border:1px solid <span class="comment">#;</span></div></pre></td></tr></table></figure></p>
<p>1.3用padding代替<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">padding:</div></pre></td></tr></table></figure></p>
<p>1.2兄弟间形成BFC</p>
<h4 id="2-img间隙"><a href="#2-img间隙" class="headerlink" title="2.img间隙"></a>2.img间隙</h4><p>例子：<br>一个div中包含img图像时，图像最下面和div边框会有一些间隙。<br>原因：<br>由于html，css都是外国人发明的，所以默认字体是英文，而英文最好的展现方式是vertical-align:baseline;而img是行内块元素，所以默认垂直对齐方式也为vertical-align:baseline;，所以会出现间隙；<br>解决：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vertical-align:middle/bottom;</div></pre></td></tr></table></figure></p>
<h4 id="3-行内块水平方向之间的间隔"><a href="#3-行内块水平方向之间的间隔" class="headerlink" title="3.行内块水平方向之间的间隔"></a>3.行内块水平方向之间的间隔</h4><p>列子：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div style=<span class="string">"display:inline-block"</span>&gt;1&lt;/div&gt;</div><div class="line">&lt;div style=<span class="string">"display:inline-block"</span>&gt;2&lt;/div&gt;</div><div class="line">&lt;div style=<span class="string">"display:inline-block"</span>&gt;3&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<p>原因：<br>行内块也有行内元素的特性，所以浏览器把换行解析为一个空格。<br>解决：<br>1.不换行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div style=<span class="string">"display:inline-block"</span>&gt;1&lt;/div&gt;&lt;div style=<span class="string">"display:inline-block"</span>&gt;2&lt;/div&gt;&lt;div style=<span class="string">"display:inline-block"</span>&gt;3&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<p>2.margin设负值，负回去<br>3.把父元素的font-size:设为0;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div style=<span class="string">"font-size:0;"</span>&gt;</div><div class="line">	&lt;div style=<span class="string">"display:inline-block"</span>&gt;1&lt;/div&gt;</div><div class="line">	&lt;div style=<span class="string">"display:inline-block"</span>&gt;2&lt;/div&gt;</div><div class="line">	&lt;div style=<span class="string">"display:inline-block"</span>&gt;3&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<h4 id="4-p标签不能放块级元素"><a href="#4-p标签不能放块级元素" class="headerlink" title="4.p标签不能放块级元素"></a>4.p标签不能放块级元素</h4><p>列子：<br>记得刚开始敲代码时就把div放进p标签里去了，后来在css中通过p标签找div却找不到，f12后才发现div自动被解析到p外面去了。才知道了p不能放块级元素。<br>解决：<br>不呢个解决，反正就不能放。</p>
<h4 id="5-行内元素设置margin-top-margin-bottom-无效"><a href="#5-行内元素设置margin-top-margin-bottom-无效" class="headerlink" title="5.行内元素设置margin-top;margin-bottom;无效"></a>5.行内元素设置margin-top;margin-bottom;无效</h4><p>就是无效，记住就行。</p>
<h4 id="6-塌陷"><a href="#6-塌陷" class="headerlink" title="6.塌陷"></a>6.塌陷</h4><p>列子：<br>下边列子ul没高度，这就是塌陷了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;ul&gt;</div><div class="line">	&lt;li style=<span class="string">"float:left;width:200px,height:200px"</span>&gt;&lt;/li&gt;</div><div class="line">	&lt;li style=<span class="string">"float:left;width:200px,height:200px"</span>&gt;&lt;/li&gt;</div><div class="line">&lt;/ul&gt;</div></pre></td></tr></table></figure></p>
<p>原因：<br>li设为浮动后，脱离文档流，所以这时候ul找不见它的子元素li了，所以没高度了。<br>解决：这个问题太常见了，但ul没设置背景或边框也很容易被忽略。解决方法比较多，下面只列了最常使用的方法，其他方法可查看我另一篇介绍关于塌陷的博文。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;style&gt;</div><div class="line">ul:after&#123;</div><div class="line">	content:<span class="string">''</span>;</div><div class="line">	display:table;</div><div class="line">	clear:both;</div><div class="line">&#125;</div><div class="line">ul&#123;</div><div class="line">	zoom:1/*为了兼容低版本ie*/</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;ul&gt;</div><div class="line">	&lt;li style=<span class="string">"float:left;width:200px,height:200px"</span>&gt;&lt;/li&gt;</div><div class="line">	&lt;li style=<span class="string">"float:left;width:200px,height:200px"</span>&gt;&lt;/li&gt;</div><div class="line">&lt;/ul&gt;</div></pre></td></tr></table></figure></p>
<h4 id="7-opacity-0-背景内容都会透明"><a href="#7-opacity-0-背景内容都会透明" class="headerlink" title="7.opacity:0;背景内容都会透明"></a>7.opacity:0;背景内容都会透明</h4><p>列子：<br>最常见的就是弹出框，如果父元素背景设置opacity:0;它的所有子元素也会透明。<br>原因：<br>opacity:属性使然。<br>解决：<br>1.背景和子元素分离.<br>2.背景透明使用rgba();</p>
<h4 id="8-父元素设置display-none-，子元素设置position-fixed-也看不到。"><a href="#8-父元素设置display-none-，子元素设置position-fixed-也看不到。" class="headerlink" title="8.父元素设置display:none;，子元素设置position:fixed;也看不到。"></a>8.父元素设置display:none;，子元素设置position:fixed;也看不到。</h4><p>毕竟就算脱离文档，也不会脱离父元素。还是受父元素影响</p>
<h4 id="9-label-for-””放a标签里或外面，for指向单选或多选框，点label却点不到。"><a href="#9-label-for-””放a标签里或外面，for指向单选或多选框，点label却点不到。" class="headerlink" title="9.label for=””放a标签里或外面，for指向单选或多选框，点label却点不到。"></a>9.label for=””放a标签里或外面，for指向单选或多选框，点label却点不到。</h4><p>背景：<br>可能有人会说你为什么会这么做，感觉没必要。<br>其实我当时是想试着用a标签指向不同的id,看可不可以做个选项卡，没想到点不同的a标签确实可以在设置了overflow:hidden;的div框里显示不同的选项，视觉上很像选项卡。最后就剩点不同的a标签，给a标签加个选中状态了，当时想的是用input的伪类:checked来做，于是就出现了上面的坑。<br>原因：<br>不管怎样，点的都是a标签。<br>解决：<br>没办法，最后只能不用a标签指向id来做，都使用了::checked来做。</p>
<h4 id="10-子元素中有设置了position-absolute-的，其他子元素没法到设置了position-absolute-的上面"><a href="#10-子元素中有设置了position-absolute-的，其他子元素没法到设置了position-absolute-的上面" class="headerlink" title="10.子元素中有设置了position:absolute;的，其他子元素没法到设置了position:absolute;的上面"></a>10.子元素中有设置了position:absolute;的，其他子元素没法到设置了position:absolute;的上面</h4><p>本身absolute就会提高层级，而z-index又是针对定位元素的，所以只能把其他元素设为相对定位，然后使用z-index来提高层级。</p>
<h4 id="11-加css3过渡效果，如果是width或height，过渡到的状态不能设为auto"><a href="#11-加css3过渡效果，如果是width或height，过渡到的状态不能设为auto" class="headerlink" title="11.加css3过渡效果，如果是width或height，过渡到的状态不能设为auto"></a>11.加css3过渡效果，如果是width或height，过渡到的状态不能设为auto</h4><p>列子：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">div&#123;</div><div class="line">	width:100px;</div><div class="line">	height:100px;</div><div class="line">	transition-property:height;</div><div class="line">	transition-duration:2s;</div><div class="line">&#125;</div><div class="line">div:hover&#123;</div><div class="line">	height:auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>解决：<br>设固定数值的宽高。</p>
<h4 id="12-给a标签加js点击事件，点击无效果（好坑，因为这蓝飞了半个来小时。）"><a href="#12-给a标签加js点击事件，点击无效果（好坑，因为这蓝飞了半个来小时。）" class="headerlink" title="12.给a标签加js点击事件，点击无效果（好坑，因为这蓝飞了半个来小时。）"></a>12.给a标签加js点击事件，点击无效果（好坑，因为这蓝飞了半个来小时。）</h4><p>原因：<br>a标签href为空,为空会重新刷新页面，使得点击无效果。<br>解决：<br>href=”javascript:void(0);”或href=”#”;</p>
<h4 id="持续总结更新中。。。。。。"><a href="#持续总结更新中。。。。。。" class="headerlink" title="持续总结更新中。。。。。。"></a>持续总结更新中。。。。。。</h4><p>以上都是本人在实际操作中遇到的坑，这些坑对于有些人可能不是坑。但对于我来说是，毕竟每个人遇到的坑相对的都不一样。希望这些坑的解决方式方法对你有所帮助。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前端填坑路&quot;&gt;&lt;a href=&quot;#前端填坑路&quot; class=&quot;headerlink&quot; title=&quot;前端填坑路&quot;&gt;&lt;/a&gt;前端填坑路&lt;/h3&gt;&lt;h4 id=&quot;1-外边距合并&quot;&gt;&lt;a href=&quot;#1-外边距合并&quot; class=&quot;headerlink&quot; title=
    
    </summary>
    
      <category term="htmlcss" scheme="http://www.ccblog.win/categories/htmlcss/"/>
    
    
      <category term="css" scheme="http://www.ccblog.win/tags/css/"/>
    
      <category term="html" scheme="http://www.ccblog.win/tags/html/"/>
    
      <category term="css3" scheme="http://www.ccblog.win/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>利用css边框做出三角形,梯形</title>
    <link href="http://www.ccblog.win/2017/04/05/%E5%88%A9%E7%94%A8css%E8%BE%B9%E6%A1%86%E5%81%9A%E5%87%BA%E4%B8%89%E8%A7%92%E5%BD%A2,%E6%A2%AF%E5%BD%A2/"/>
    <id>http://www.ccblog.win/2017/04/05/利用css边框做出三角形,梯形/</id>
    <published>2017-04-05T00:15:23.000Z</published>
    <updated>2017-06-01T05:19:46.558Z</updated>
    
    <content type="html"><![CDATA[<p>在网页中常能看到三角形，可是我们都知道网页中只有矩形边框，那这些三角形是怎么做出来的呢。其实做出这些三角形是利用了边框。如果了解边宽的话应该都知道边框的结构是下面这样的。<br><img src="http://ooa3lxrpg.bkt.clouddn.com/border.jpg?imageView2/0/q/75|watermark/2/text/d3d3LmNjYmxvZy53aW4=/font/6buR5L2T/fontsize/600/fill/I0Y2RjZGNg==/dissolve/85/gravity/SouthEast/dx/10/dy/10" alt="enter image description here"><br>如果我将width,height以及padding都设为0,也就是上图区域1为none,那么渐变为下图这样。<br><img src="http://ooa3lxrpg.bkt.clouddn.com/border1.jpg?imageView2/0/q/75|watermark/2/text/d3d3LmNjYmxvZy53aW4=/font/6buR5L2T/fontsize/600/fill/I0Y2RjZGNg==/dissolve/85/gravity/SouthEast/dx/10/dy/10" alt="enter image description here"><br>是不是已经看到4个三角形了，对的，这就是我们需要的，接着就看你需要哪个方向的三角形，然后设置对边为none,侧边两边为透明就可以了，如下图：<br><img src="http://ooa3lxrpg.bkt.clouddn.com/border2.jpg?imageView2/0/q/75|watermark/2/text/d3d3LmNjYmxvZy53aW4=/font/6buR5L2T/fontsize/600/fill/I0Y2RjZGNg==/dissolve/85/gravity/SouthEast/dx/10/dy/10" alt="enter image description here"><br>代码如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">width:0;</div><div class="line">height:0;</div><div class="line">border-top:40px solid yellow;</div><div class="line">border-left:40px solid transparent;/*transparent和rgba(0,0,0,0)一样*/</div><div class="line">border-right:40px solid transparent;</div><div class="line">或者</div><div class="line">width:0;</div><div class="line">height:0;</div><div class="line">border-width:40px 40px 0 40px;</div><div class="line">border-color:yellow transparent;</div><div class="line">border-style:solid;</div></pre></td></tr></table></figure></p>
<p>当然如果给它一个width,就可以出现梯形了。</p>
<p>知识点虽小，但却很实用，如果再结合伪元素::before,::after，简直太好用了。<br>继续upupup</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在网页中常能看到三角形，可是我们都知道网页中只有矩形边框，那这些三角形是怎么做出来的呢。其实做出这些三角形是利用了边框。如果了解边宽的话应该都知道边框的结构是下面这样的。&lt;br&gt;&lt;img src=&quot;http://ooa3lxrpg.bkt.clouddn.com/borde
    
    </summary>
    
      <category term="css" scheme="http://www.ccblog.win/categories/css/"/>
    
    
      <category term="css" scheme="http://www.ccblog.win/tags/css/"/>
    
      <category term="css3" scheme="http://www.ccblog.win/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>css水平垂直居中</title>
    <link href="http://www.ccblog.win/2017/04/03/css%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/"/>
    <id>http://www.ccblog.win/2017/04/03/css水平垂直居中/</id>
    <published>2017-04-03T00:15:23.000Z</published>
    <updated>2017-06-01T05:21:10.381Z</updated>
    
    <content type="html"><![CDATA[<p>要让下图中绿色框水平垂直居中，你是怎么实现的，可能每个人都有自己习惯的使用方法。下面是我总结的几种方法废话不多说，直接上菜。<br><img src="http://ooa3lxrpg.bkt.clouddn.com/005K8nLYzy77M9vyXFM4a&amp;690.png" alt="enter image description here"></p>
<h3 id="1-利用绝对定位"><a href="#1-利用绝对定位" class="headerlink" title="1.利用绝对定位"></a>1.利用绝对定位</h3><p>方法：把top和 left 偏移 50%，在用margin 偏移回去。<br>适合：已经固定大小的元素。做响应的话可能根据实际需要还需要js的操作。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">div1&#123;</div><div class="line">    background:gold;</div><div class="line">    width:500px;</div><div class="line">    height:500px;</div><div class="line">    position:relative;</div><div class="line">&#125;</div><div class="line">div2&#123;</div><div class="line">    width:400px;</div><div class="line">    height:400px;</div><div class="line">    background:greenyellow;</div><div class="line">    position:absolute;</div><div class="line">    top:50%;</div><div class="line">    left:50%;</div><div class="line">    margin-top:-200px;</div><div class="line">    margin-left:-200px;</div><div class="line">&#125;</div><div class="line">&lt;div id=<span class="string">"div1"</span>&gt;</div><div class="line">    &lt;div id=<span class="string">"div2"</span>&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<h3 id="2-利用绝对定位"><a href="#2-利用绝对定位" class="headerlink" title="2..利用绝对定位"></a>2..利用绝对定位</h3><p>方法：把偏移都设为0，在用margin 自动属性居中。<br>适合：:已经固定大小的元素，不设置宽高，它会撑满整个父元素。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">   <span class="comment">#div1&#123;</span></div><div class="line">        background:gold;</div><div class="line">        width:500px;</div><div class="line">        height:500px;</div><div class="line">        position:relative;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">#div2&#123;</span></div><div class="line">        position:absolute;</div><div class="line">        top:0;</div><div class="line">        bottom:0;</div><div class="line">        left:0;</div><div class="line">        right:0;</div><div class="line">        width:400px;</div><div class="line">        height:400px;</div><div class="line">        margin:auto;</div><div class="line">        background:greenyellow;</div><div class="line">    &#125;</div><div class="line">&lt;div id=<span class="string">"div1"</span>&gt;</div><div class="line">    &lt;div id=<span class="string">"div2"</span>&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<h3 id="3-利用伪元素"><a href="#3-利用伪元素" class="headerlink" title="3.利用伪元素"></a>3.利用伪元素</h3><p>方法：div2和::after都转为inline-block，在父元素中设文本居中来达到元素水平居中，把伪元素宽度设为100%，然后div2和::after都垂直垂直对齐方式为middle。<br>适合：宽高不定的元素，元素会随内容改变大小，但不管怎么改变，就是可以始终维持垂直和水平置中。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#div1&#123;</span></div><div class="line">            background:gold;</div><div class="line">            width:500px;</div><div class="line">            height:500px;</div><div class="line">            text-align:center;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">#div2&#123;</span></div><div class="line">            background:greenyellow;</div><div class="line">            height:400px;</div><div class="line">            width:400px;</div><div class="line">            display:inline-block;</div><div class="line">            vertical-align:middle;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">#div1::after&#123;</span></div><div class="line">            content:<span class="string">''</span>;</div><div class="line">            height:100%;</div><div class="line">            display:inline-block;</div><div class="line">            background:green;</div><div class="line">            vertical-align:middle;</div><div class="line">       &#125;</div><div class="line">&lt;div id=<span class="string">"div1"</span>&gt;</div><div class="line">    &lt;div id=<span class="string">"div2"</span>&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<h3 id="4-利用伪元素"><a href="#4-利用伪元素" class="headerlink" title="4.利用伪元素"></a>4.利用伪元素</h3><p>这个方法和方法3差不多，只是元素属性不太一样。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#div1&#123;</span></div><div class="line">            background:gold;</div><div class="line">            width:500px;</div><div class="line">            height:500px;</div><div class="line">            text-align:center;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">#div2&#123;</span></div><div class="line">            background:greenyellow;</div><div class="line">            height:400px;</div><div class="line">            width:400px;</div><div class="line">            display:inline-block;</div><div class="line">            vertical-align:middle;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">#div1::after&#123;</span></div><div class="line">            content:<span class="string">''</span>;</div><div class="line">            height:50%;</div><div class="line">            display:inline-block;</div><div class="line">            background:green;</div><div class="line">        &#125;</div><div class="line">&lt;div id=<span class="string">"div1"</span>&gt;</div><div class="line">    &lt;div id=<span class="string">"div2"</span>&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<h3 id="5-把元素设为inline-block"><a href="#5-把元素设为inline-block" class="headerlink" title="5.把元素设为inline-block"></a>5.把元素设为inline-block</h3><p>方法：在父元素中设置line-height和center然后设置垂直对齐方式为居中就可以<br>适合：父元素高固定的，毕竟要设置行高。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#div1&#123;</span></div><div class="line">        background:gold;</div><div class="line">        width:500px;</div><div class="line">        height:500px;</div><div class="line">        line-height:500px;</div><div class="line">        text-align:center;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">#div2&#123;</span></div><div class="line">        width:400px;</div><div class="line">        height:400px;</div><div class="line">        vertical-align:middle;</div><div class="line">        display:inline-block;</div><div class="line">        background:greenyellow;</div><div class="line">    &#125;</div><div class="line">&lt;div id=<span class="string">"div1"</span>&gt;</div><div class="line">    &lt;div id=<span class="string">"div2"</span>&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<p>你可以根据实际情况使用不同方法。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;要让下图中绿色框水平垂直居中，你是怎么实现的，可能每个人都有自己习惯的使用方法。下面是我总结的几种方法废话不多说，直接上菜。&lt;br&gt;&lt;img src=&quot;http://ooa3lxrpg.bkt.clouddn.com/005K8nLYzy77M9vyXFM4a&amp;amp;69
    
    </summary>
    
      <category term="css" scheme="http://www.ccblog.win/categories/css/"/>
    
    
      <category term="css" scheme="http://www.ccblog.win/tags/css/"/>
    
      <category term="css3" scheme="http://www.ccblog.win/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>伪类和伪元素的区别</title>
    <link href="http://www.ccblog.win/2017/03/30/%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%8C%BA%E5%88%AB%20-%20%E5%89%AF%E6%9C%AC/"/>
    <id>http://www.ccblog.win/2017/03/30/伪类和伪元素的区别 - 副本/</id>
    <published>2017-03-30T00:15:23.000Z</published>
    <updated>2017-06-01T05:19:35.875Z</updated>
    
    <content type="html"><![CDATA[<p>伪类和伪元素作为前端搞事情的各位应该常听说，而且也一直在使用着，那他们到底真正的有什么区别呢。下面咱们就说说。</p>
<p>其实在css1和css2中伪类和伪元素没有明确区分开来，从都是使用一个冒号：可了解。但这明显是不对的，所以在css3中对伪类和伪元素无论是概念还是使用方式上都做了明确的区分。从伪类还是使用一个冒号：，但是伪元素是使用两个：可了解。那他们到底怎么区分的呢。</p>
<h3 id="css3之前的伪类和伪元素"><a href="#css3之前的伪类和伪元素" class="headerlink" title="css3之前的伪类和伪元素"></a>css3之前的伪类和伪元素</h3><h4 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h4><blockquote>
<p>先来看看w3c在css3之前对他们的解释<br>CSS 伪类用于向某些选择器添加特殊的效果。<br>CSS 伪元素用于向某些选择器设置特殊效果。<br>好吧，你没看错，他们的解释一样。</p>
</blockquote>
<h4 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h4><h4 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h4><p>比如 :hover, :link, :nth-child(n), :focus, :lang 等<br>伪元素<br>比如 :after, :before, :firste-letter, :first-line<br>你说解释一样，使用一样，怪不得之前好多人对他们分不清，其实这个锅是w3c的。</p>
<h3 id="css3的伪类和伪元素"><a href="#css3的伪类和伪元素" class="headerlink" title="css3的伪类和伪元素"></a>css3的伪类和伪元素</h3><h4 id="解释-1"><a href="#解释-1" class="headerlink" title="解释"></a>解释</h4><p>还是先来看看w3c在css3中对他们的解释</p>
<blockquote>
<p>伪类存在的意义是为了通过选择器找到那些不存在于DOM树中的信息以及不能被常规CSS选择器获取到的信息。</p>
<p>伪元素在DOM树中创建了一些抽象元素，这些抽象元素是不存在于文档语言里的。比如：documen接口不提供访问元素内容的第一个字或者第一行的机制，而伪元素可以使开发者可以提取到这些信息。并且，一些伪元素可以使开发者获取到不存在于源文档中的内容（比如常见的::before,::after）</p>
</blockquote>
<h4 id="伪类-1"><a href="#伪类-1" class="headerlink" title="伪类"></a>伪类</h4><p>概念解读<br>1.找到那些不存在于DOM树中的信息。如：:hover, :link 等悬浮和未被访问的链接的状态就属于不存在于DOM树中的信息。<br>2.不能被常规CSS选择器获取到的信息。如：:target它就属于。</p>
<h4 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h4><p>概念解读<br>伪元素是在文档中创建了一个元素，::after, ::before可能更直观也更好理解，::first-line, ::first-letter等可能不是那么直观，但其实照他的解释，::first-line, ::first-letter等也是先创建个元素，然后再把第一行或者第一个字符放进这个容器里，然后就是你给这个容器添加样式了。</p>
<p>其实伪类就是为了1.方便获取元素和2.获取到css无法获取到的状态等信息<br>而伪元素就是给文本中添加一个虚拟的元素，目的是对内容信息进行修饰和辅助</p>
<h4 id="伪类和伪元素区别"><a href="#伪类和伪元素区别" class="headerlink" title="伪类和伪元素区别"></a>伪类和伪元素区别</h4><p>1.伪类使用一个冒号：，伪元素使用两个冒号：<br>2.伪类说白了是为了弥补普通选择器的不足，来获取更多信息，而伪元素目的是对内容信息进行修饰<br>3.伪类可以同时使用多个，伪元素只能使用一个，并且伪元素必须处于选择器语句的最后</p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>1.伪元素如果要兼容ie8，还是用一个冒号：<br>2.在css3中新加的伪元素必须写两个冒号：</p>
<h4 id="目前伪类和伪元素"><a href="#目前伪类和伪元素" class="headerlink" title="目前伪类和伪元素"></a>目前伪类和伪元素</h4><table>
<thead>
<tr>
<th style="text-align:left">伪类</th>
<th style="text-align:right">伪元素</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">:active</td>
<td style="text-align:right">::after</td>
</tr>
<tr>
<td style="text-align:left">:focus</td>
<td style="text-align:right">::before</td>
</tr>
<tr>
<td style="text-align:left">:hover</td>
<td style="text-align:right">::first-line</td>
</tr>
<tr>
<td style="text-align:left">:link</td>
<td style="text-align:right">::first-letter</td>
</tr>
<tr>
<td style="text-align:left">:visited</td>
<td style="text-align:right">::placeholder</td>
</tr>
<tr>
<td style="text-align:left">:first-child</td>
<td style="text-align:right">::selection</td>
</tr>
<tr>
<td style="text-align:left">:lang</td>
</tr>
<tr>
<td style="text-align:left">。。。</td>
</tr>
</tbody>
</table>
<p>我是来打家劫舍的，还不快速速交出银两。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;伪类和伪元素作为前端搞事情的各位应该常听说，而且也一直在使用着，那他们到底真正的有什么区别呢。下面咱们就说说。&lt;/p&gt;
&lt;p&gt;其实在css1和css2中伪类和伪元素没有明确区分开来，从都是使用一个冒号：可了解。但这明显是不对的，所以在css3中对伪类和伪元素无论是概念还是使
    
    </summary>
    
      <category term="css" scheme="http://www.ccblog.win/categories/css/"/>
    
    
      <category term="css" scheme="http://www.ccblog.win/tags/css/"/>
    
      <category term="css3" scheme="http://www.ccblog.win/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>伪类和伪元素的区别</title>
    <link href="http://www.ccblog.win/2017/03/30/%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://www.ccblog.win/2017/03/30/伪类和伪元素的区别/</id>
    <published>2017-03-30T00:15:23.000Z</published>
    <updated>2017-06-01T05:21:50.519Z</updated>
    
    <content type="html"><![CDATA[<p>伪类和伪元素作为前端搞事情的各位应该常听说，而且也一直在使用着，那他们到底真正的有什么区别呢。下面咱们就说说。</p>
<p>其实在css1和css2中伪类和伪元素没有明确区分开来，从都是使用一个冒号：可了解。但这明显是不对的，所以在css3中对伪类和伪元素无论是概念还是使用方式上都做了明确的区分。从伪类还是使用一个冒号：，但是伪元素是使用两个：可了解。那他们到底怎么区分的呢。</p>
<h3 id="css3之前的伪类和伪元素"><a href="#css3之前的伪类和伪元素" class="headerlink" title="css3之前的伪类和伪元素"></a>css3之前的伪类和伪元素</h3><h4 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h4><blockquote>
<p>先来看看w3c在css3之前对他们的解释<br>CSS 伪类用于向某些选择器添加特殊的效果。<br>CSS 伪元素用于向某些选择器设置特殊效果。<br>好吧，你没看错，他们的解释一样。</p>
</blockquote>
<h4 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h4><h4 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h4><p>比如 :hover, :link, :nth-child(n), :focus, :lang 等<br>伪元素<br>比如 :after, :before, :firste-letter, :first-line<br>你说解释一样，使用一样，怪不得之前好多人对他们分不清，其实这个锅是w3c的。</p>
<h3 id="css3的伪类和伪元素"><a href="#css3的伪类和伪元素" class="headerlink" title="css3的伪类和伪元素"></a>css3的伪类和伪元素</h3><h4 id="解释-1"><a href="#解释-1" class="headerlink" title="解释"></a>解释</h4><p>还是先来看看w3c在css3中对他们的解释</p>
<blockquote>
<p>伪类存在的意义是为了通过选择器找到那些不存在于DOM树中的信息以及不能被常规CSS选择器获取到的信息。</p>
<p>伪元素在DOM树中创建了一些抽象元素，这些抽象元素是不存在于文档语言里的。比如：documen接口不提供访问元素内容的第一个字或者第一行的机制，而伪元素可以使开发者可以提取到这些信息。并且，一些伪元素可以使开发者获取到不存在于源文档中的内容（比如常见的::before,::after）</p>
</blockquote>
<h4 id="伪类-1"><a href="#伪类-1" class="headerlink" title="伪类"></a>伪类</h4><p>概念解读<br>1.找到那些不存在于DOM树中的信息。如：:hover, :link 等悬浮和未被访问的链接的状态就属于不存在于DOM树中的信息。<br>2.不能被常规CSS选择器获取到的信息。如：:target它就属于。</p>
<h4 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h4><p>概念解读<br>伪元素是在文档中创建了一个元素，::after, ::before可能更直观也更好理解，::first-line, ::first-letter等可能不是那么直观，但其实照他的解释，::first-line, ::first-letter等也是先创建个元素，然后再把第一行或者第一个字符放进这个容器里，然后就是你给这个容器添加样式了。</p>
<p>其实伪类就是为了1.方便获取元素和2.获取到css无法获取到的状态等信息<br>而伪元素就是给文本中添加一个虚拟的元素，目的是对内容信息进行修饰和辅助</p>
<h4 id="伪类和伪元素区别"><a href="#伪类和伪元素区别" class="headerlink" title="伪类和伪元素区别"></a>伪类和伪元素区别</h4><p>1.伪类使用一个冒号：，伪元素使用两个冒号：<br>2.伪类说白了是为了弥补普通选择器的不足，来获取更多信息，而伪元素目的是对内容信息进行修饰<br>3.伪类可以同时使用多个，伪元素只能使用一个，并且伪元素必须处于选择器语句的最后</p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>1.伪元素如果要兼容ie8，还是用一个冒号：<br>2.在css3中新加的伪元素必须写两个冒号：</p>
<h4 id="目前伪类和伪元素"><a href="#目前伪类和伪元素" class="headerlink" title="目前伪类和伪元素"></a>目前伪类和伪元素</h4><table>
<thead>
<tr>
<th style="text-align:left">伪类</th>
<th style="text-align:right">伪元素</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">:active</td>
<td style="text-align:right">::after</td>
</tr>
<tr>
<td style="text-align:left">:focus</td>
<td style="text-align:right">::before</td>
</tr>
<tr>
<td style="text-align:left">:hover</td>
<td style="text-align:right">::first-line</td>
</tr>
<tr>
<td style="text-align:left">:link</td>
<td style="text-align:right">::first-letter</td>
</tr>
<tr>
<td style="text-align:left">:visited</td>
<td style="text-align:right">::placeholder</td>
</tr>
<tr>
<td style="text-align:left">:first-child</td>
<td style="text-align:right">::selection</td>
</tr>
<tr>
<td style="text-align:left">:lang</td>
</tr>
<tr>
<td style="text-align:left">。。。</td>
</tr>
</tbody>
</table>
<p>我是来打家劫舍的，还不快速速交出银两。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;伪类和伪元素作为前端搞事情的各位应该常听说，而且也一直在使用着，那他们到底真正的有什么区别呢。下面咱们就说说。&lt;/p&gt;
&lt;p&gt;其实在css1和css2中伪类和伪元素没有明确区分开来，从都是使用一个冒号：可了解。但这明显是不对的，所以在css3中对伪类和伪元素无论是概念还是使
    
    </summary>
    
      <category term="css" scheme="http://www.ccblog.win/categories/css/"/>
    
    
      <category term="css" scheme="http://www.ccblog.win/tags/css/"/>
    
      <category term="css3" scheme="http://www.ccblog.win/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>伪类和伪元素的区别</title>
    <link href="http://www.ccblog.win/2017/03/30/%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%8C%BA%E5%88%AB%20-%20%E5%89%AF%E6%9C%AC%20-%20%E5%89%AF%E6%9C%AC/"/>
    <id>http://www.ccblog.win/2017/03/30/伪类和伪元素的区别 - 副本 - 副本/</id>
    <published>2017-03-30T00:15:23.000Z</published>
    <updated>2017-06-01T05:19:41.797Z</updated>
    
    <content type="html"><![CDATA[<p>伪类和伪元素作为前端搞事情的各位应该常听说，而且也一直在使用着，那他们到底真正的有什么区别呢。下面咱们就说说。</p>
<p>其实在css1和css2中伪类和伪元素没有明确区分开来，从都是使用一个冒号：可了解。但这明显是不对的，所以在css3中对伪类和伪元素无论是概念还是使用方式上都做了明确的区分。从伪类还是使用一个冒号：，但是伪元素是使用两个：可了解。那他们到底怎么区分的呢。</p>
<h3 id="css3之前的伪类和伪元素"><a href="#css3之前的伪类和伪元素" class="headerlink" title="css3之前的伪类和伪元素"></a>css3之前的伪类和伪元素</h3><h4 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h4><blockquote>
<p>先来看看w3c在css3之前对他们的解释<br>CSS 伪类用于向某些选择器添加特殊的效果。<br>CSS 伪元素用于向某些选择器设置特殊效果。<br>好吧，你没看错，他们的解释一样。</p>
</blockquote>
<h4 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h4><h4 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h4><p>比如 :hover, :link, :nth-child(n), :focus, :lang 等<br>伪元素<br>比如 :after, :before, :firste-letter, :first-line<br>你说解释一样，使用一样，怪不得之前好多人对他们分不清，其实这个锅是w3c的。</p>
<h3 id="css3的伪类和伪元素"><a href="#css3的伪类和伪元素" class="headerlink" title="css3的伪类和伪元素"></a>css3的伪类和伪元素</h3><h4 id="解释-1"><a href="#解释-1" class="headerlink" title="解释"></a>解释</h4><p>还是先来看看w3c在css3中对他们的解释</p>
<blockquote>
<p>伪类存在的意义是为了通过选择器找到那些不存在于DOM树中的信息以及不能被常规CSS选择器获取到的信息。</p>
<p>伪元素在DOM树中创建了一些抽象元素，这些抽象元素是不存在于文档语言里的。比如：documen接口不提供访问元素内容的第一个字或者第一行的机制，而伪元素可以使开发者可以提取到这些信息。并且，一些伪元素可以使开发者获取到不存在于源文档中的内容（比如常见的::before,::after）</p>
</blockquote>
<h4 id="伪类-1"><a href="#伪类-1" class="headerlink" title="伪类"></a>伪类</h4><p>概念解读<br>1.找到那些不存在于DOM树中的信息。如：:hover, :link 等悬浮和未被访问的链接的状态就属于不存在于DOM树中的信息。<br>2.不能被常规CSS选择器获取到的信息。如：:target它就属于。</p>
<h4 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h4><p>概念解读<br>伪元素是在文档中创建了一个元素，::after, ::before可能更直观也更好理解，::first-line, ::first-letter等可能不是那么直观，但其实照他的解释，::first-line, ::first-letter等也是先创建个元素，然后再把第一行或者第一个字符放进这个容器里，然后就是你给这个容器添加样式了。</p>
<p>其实伪类就是为了1.方便获取元素和2.获取到css无法获取到的状态等信息<br>而伪元素就是给文本中添加一个虚拟的元素，目的是对内容信息进行修饰和辅助</p>
<h4 id="伪类和伪元素区别"><a href="#伪类和伪元素区别" class="headerlink" title="伪类和伪元素区别"></a>伪类和伪元素区别</h4><p>1.伪类使用一个冒号：，伪元素使用两个冒号：<br>2.伪类说白了是为了弥补普通选择器的不足，来获取更多信息，而伪元素目的是对内容信息进行修饰<br>3.伪类可以同时使用多个，伪元素只能使用一个，并且伪元素必须处于选择器语句的最后</p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>1.伪元素如果要兼容ie8，还是用一个冒号：<br>2.在css3中新加的伪元素必须写两个冒号：</p>
<h4 id="目前伪类和伪元素"><a href="#目前伪类和伪元素" class="headerlink" title="目前伪类和伪元素"></a>目前伪类和伪元素</h4><table>
<thead>
<tr>
<th style="text-align:left">伪类</th>
<th style="text-align:right">伪元素</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">:active</td>
<td style="text-align:right">::after</td>
</tr>
<tr>
<td style="text-align:left">:focus</td>
<td style="text-align:right">::before</td>
</tr>
<tr>
<td style="text-align:left">:hover</td>
<td style="text-align:right">::first-line</td>
</tr>
<tr>
<td style="text-align:left">:link</td>
<td style="text-align:right">::first-letter</td>
</tr>
<tr>
<td style="text-align:left">:visited</td>
<td style="text-align:right">::placeholder</td>
</tr>
<tr>
<td style="text-align:left">:first-child</td>
<td style="text-align:right">::selection</td>
</tr>
<tr>
<td style="text-align:left">:lang</td>
</tr>
<tr>
<td style="text-align:left">。。。</td>
</tr>
</tbody>
</table>
<p>我是来打家劫舍的，还不快速速交出银两。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;伪类和伪元素作为前端搞事情的各位应该常听说，而且也一直在使用着，那他们到底真正的有什么区别呢。下面咱们就说说。&lt;/p&gt;
&lt;p&gt;其实在css1和css2中伪类和伪元素没有明确区分开来，从都是使用一个冒号：可了解。但这明显是不对的，所以在css3中对伪类和伪元素无论是概念还是使
    
    </summary>
    
      <category term="css" scheme="http://www.ccblog.win/categories/css/"/>
    
    
      <category term="css" scheme="http://www.ccblog.win/tags/css/"/>
    
      <category term="css3" scheme="http://www.ccblog.win/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>纯css点击效果</title>
    <link href="http://www.ccblog.win/2017/03/20/%E7%BA%AFcss%E7%82%B9%E5%87%BB%E6%95%88%E6%9E%9C/"/>
    <id>http://www.ccblog.win/2017/03/20/纯css点击效果/</id>
    <published>2017-03-20T00:15:23.000Z</published>
    <updated>2017-06-01T05:19:50.908Z</updated>
    
    <content type="html"><![CDATA[<p>平时网页中如果需要出现点击效果的按钮或是菜单，你可能首先想到的是js的点击事件，实现这些利用js虽然也简单，但毕竟是脚本，运行起来，性能上还是会慢些，其实有些点击效果用css也可以实现，运行css那可就比js快多了，下面总结一些用纯css实现的点击效果。</p>
<h3 id="1-利用单选框和复选框"><a href="#1-利用单选框和复选框" class="headerlink" title="1.利用单选框和复选框"></a>1.利用单选框和复选框</h3><h4 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h4><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src="http://ooa3lxrpg.bkt.clouddn.com/1.gif" alt="enter image description here"></p>
<p>html<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;input <span class="built_in">type</span>=<span class="string">"checkbox"</span> id=<span class="string">"p"</span>&gt;&lt;label <span class="keyword">for</span>=<span class="string">"p"</span>&gt;&lt;/label&gt;</div></pre></td></tr></table></figure></p>
<p>css<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">input[<span class="built_in">type</span>=<span class="string">'checkbox'</span>]&#123;</div><div class="line">			display:none;</div><div class="line">		&#125;</div><div class="line">		label&#123;</div><div class="line">			display:inline-block;</div><div class="line">			width:245px;</div><div class="line">			height:81px;</div><div class="line">			background:none;</div><div class="line">			border:none;</div><div class="line">			border-radius:40px;</div><div class="line">			-moz-border-radius:40px;</div><div class="line">			-webkit-border-radius:40px;</div><div class="line">			-o-border-radius:40px;</div><div class="line">			-ms-border-radius:40px;</div><div class="line">			background:url(<span class="string">'./images/button.jpg'</span>);</div><div class="line">		&#125;</div><div class="line">		input:checked+label&#123;</div><div class="line">			background-position:245px top;</div><div class="line">		&#125;</div></pre></td></tr></table></figure></p>
<p>不过由于利用了单选框和复选框的 :checked 来实现，所以需要支持css3的浏览器才可以。其实利用它最常用的就是改变单选复选框的样式，不过只要你想，它还可以实现很多效果，帮你减少使用js代码。就像下面这个例子。</p>
<h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><p><img src="http://ooa3lxrpg.bkt.clouddn.com/pl.gif" alt="enter image description here"><br>是不是很不错</p>
<p>###2.利用伪类:active</p>
<p>这应该是最容易想到，但也最容易忽略的。</p>
<p>效果<br><img src="http://ooa3lxrpg.bkt.clouddn.com/po.gif" alt="enter image description here"></p>
<p>html<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;button class=<span class="string">"button"</span>&gt;click&lt;/button&gt;</div></pre></td></tr></table></figure></p>
<p>css<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">.button &#123;</div><div class="line">    position: relative;</div><div class="line">    background-color: <span class="comment">#0d6ce2;</span></div><div class="line">    border: none;</div><div class="line">    font-size: 28px;</div><div class="line">    color: <span class="comment">#FFFFFF;</span></div><div class="line">    padding: 20px;</div><div class="line">    width: 200px;</div><div class="line">    text-align: center;</div><div class="line">	border-radius:20px;</div><div class="line">	outline:none;</div><div class="line">    -webkit-transition-duration: 0.4s; /* Safari */</div><div class="line">    transition-duration: 0.4s;</div><div class="line">    text-decoration: none;</div><div class="line">    overflow: hidden;</div><div class="line">    cursor: pointer;</div><div class="line">&#125;</div><div class="line">.button:after &#123;</div><div class="line">    content: <span class="string">""</span>;</div><div class="line">    background: <span class="comment">#fff;</span></div><div class="line">    display: block;</div><div class="line">    position: absolute;</div><div class="line">	top:0;</div><div class="line">	left:0;</div><div class="line">    width:300px;</div><div class="line">	height:300px;</div><div class="line">    opacity: 0;</div><div class="line">    transition: all 0.8s</div><div class="line">&#125;</div><div class="line">.button:active:after &#123;</div><div class="line">    top:75px;</div><div class="line">	right:200px;</div><div class="line">    opacity: 1;</div><div class="line">    transition: 0s</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>希望本篇博客对大家学习有所帮助。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;平时网页中如果需要出现点击效果的按钮或是菜单，你可能首先想到的是js的点击事件，实现这些利用js虽然也简单，但毕竟是脚本，运行起来，性能上还是会慢些，其实有些点击效果用css也可以实现，运行css那可就比js快多了，下面总结一些用纯css实现的点击效果。&lt;/p&gt;
&lt;h3 i
    
    </summary>
    
      <category term="css" scheme="http://www.ccblog.win/categories/css/"/>
    
    
      <category term="css" scheme="http://www.ccblog.win/tags/css/"/>
    
      <category term="css3" scheme="http://www.ccblog.win/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>hsl颜色表示法</title>
    <link href="http://www.ccblog.win/2017/03/19/css%E9%A2%9C%E8%89%B2%E8%A1%A8%E7%A4%BA%E7%A7%8D%E7%B1%BB/"/>
    <id>http://www.ccblog.win/2017/03/19/css颜色表示种类/</id>
    <published>2017-03-19T00:15:23.000Z</published>
    <updated>2017-06-01T05:23:22.471Z</updated>
    
    <content type="html"><![CDATA[<p>css颜色表示法通常常用和最常见的三种<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">background-color:red;</div><div class="line">background-color:<span class="comment">#ff0000;</span></div><div class="line">background-color:rgb(255,0,0);</div></pre></td></tr></table></figure></p>
<p>hsl颜色表示法，不知大家用没用过，反正我到我写这篇博客之前一直没用过。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">backgroud-color:hsl(0,100%,54%);</div></pre></td></tr></table></figure></p>
<p>是不是感觉写法和rgb很像，rgb分别代表三原色，hsl分别代表色调(h)，饱和度(s)，亮度(l)，了解颜色或用过ps（ps的三通道）的应该很了解，这种标准是目前运用最广的颜色系统之一。<br>h：取值（0~360）0和360表示红色，120表绿色，240表示蓝色；<br>s：0%~100%；<br>l：0%~100%；<br>如果想给他加透明，写法和rgb一毛一样，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">backgroud-color:hsla(0,100%,54%,.5);</div></pre></td></tr></table></figure></p>
<p>不过由于是css3属性，浏览器必须支持css3才可以。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;css颜色表示法通常常用和最常见的三种&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/di
    
    </summary>
    
      <category term="css3" scheme="http://www.ccblog.win/categories/css3/"/>
    
    
      <category term="css" scheme="http://www.ccblog.win/tags/css/"/>
    
      <category term="css3" scheme="http://www.ccblog.win/tags/css3/"/>
    
      <category term="颜色" scheme="http://www.ccblog.win/tags/%E9%A2%9C%E8%89%B2/"/>
    
      <category term="hsl" scheme="http://www.ccblog.win/tags/hsl/"/>
    
  </entry>
  
  <entry>
    <title>hexo的next主题配置和优化</title>
    <link href="http://www.ccblog.win/2017/03/14/hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BF%AE%E6%94%B9%E6%A0%B7%E5%BC%8F/"/>
    <id>http://www.ccblog.win/2017/03/14/hexo主题配置和修改样式/</id>
    <published>2017-03-14T00:15:23.000Z</published>
    <updated>2017-06-01T05:21:35.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="继续叨叨叨"><a href="#继续叨叨叨" class="headerlink" title="继续叨叨叨"></a>继续叨叨叨</h2><p>上一篇介绍了hexo的安装和部署（还没部署的小伙伴<a href="http://www.ccblog.win/2017/04/11/hello-world">点这里</a>)，这篇咱们接着上篇介绍怎么应用主题next和优化next。</p>
<h2 id="next主题"><a href="#next主题" class="headerlink" title="next主题"></a>next主题</h2><p>hexo的主题很多，但还是觉得next符合我的感觉，简洁大气，耐看。毕竟是博客，文章才是最主要的，花里胡哨的主题太宣兵夺主了。</p>
<h3 id="下载应用next"><a href="#下载应用next" class="headerlink" title="下载应用next"></a>下载应用next</h3><p>hexo的主题都存放在themes文件夹下，在themes文件夹下右键Git bash Here，输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next next</div></pre></td></tr></table></figure></p>
<p>然后在_config.yml文件中找到theme字段改为next（hexo的所有主题应用都一样）。<br>然后输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo s -debug</div></pre></td></tr></table></figure></p>
<p>在本地预览调试看看是否应用成功。</p>
<h3 id="选择自己喜欢的next外观"><a href="#选择自己喜欢的next外观" class="headerlink" title="选择自己喜欢的next外观"></a>选择自己喜欢的next外观</h3><p>打开下载好的next文件夹下的_config.yml找到scheme字段，将你喜欢的外观前面的#删除。这样重新输入上面的命令，在本地预览查看。</p>
<h3 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h3><p>在next下的_config.yml中找到language字段，设置语言名字。在languages文件夹下的文件名就是所对应支持的语言：<br>| 名字| 对应语言|<br>| ————- |:————-:|<br>| en      | 英语 |<br>| zh-Hans      | 简体中文      |<br>| zh-hk / zh-tw | 繁體中文      |<br>| ja      | 日本語|<br>| ko      | 韩语|<br>| ru| 俄语|<br>| fr-FR      | 法语      |<br>| pt | 葡萄牙语      |<br>| de     | 德语|<br>| id      | 印度尼西亚|</p>
<h2 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h2><p>在主题配置文件中找到avatar字段，写上你头像的http地址（云存储对应头像的地址）也可放在本地，不过推荐放云端存储。</p>
<h3 id="添加标签页"><a href="#添加标签页" class="headerlink" title="添加标签页"></a>添加标签页</h3><p>在hext目录下右键git bash Here输入以下命令新建标签页，（注意：文章中没加入过标签的话页面为空）,标签页位于source文件夹下。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page tags</div></pre></td></tr></table></figure></p>
<p>在source \ _posts下的文章中在两个- - -之间添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">type</span>: <span class="string">"tags"</span></div><div class="line">tags: [<span class="string">'hexo'</span>,<span class="string">'next'</span>](hexo和next就是标签，你可以写任何关于你文章名字的标签,加到后页面就可以打开看到标签了)</div></pre></td></tr></table></figure></p>
<h3 id="添加分类页面"><a href="#添加分类页面" class="headerlink" title="添加分类页面"></a>添加分类页面</h3><p>和添加标签页一样<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page categories</div></pre></td></tr></table></figure></p>
<p>在source \ _posts下的在文章中在两个- - -之间添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">type</span>: <span class="string">"categories"</span></div><div class="line">categories: hexo博客</div></pre></td></tr></table></figure></p>
<h3 id="社交链接"><a href="#社交链接" class="headerlink" title="社交链接"></a>社交链接</h3><p>在主题配置文件中找到social字段，输入对应的你的地址就ok了，不想显示的可以加#.</p>
<h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p>在主题配置文件中找到links字段，输入一个（name: http地址）形式的地址就ok了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">links:</div><div class="line">  name: http地址</div></pre></td></tr></table></figure></p>
<h2 id="主题样式修改"><a href="#主题样式修改" class="headerlink" title="主题样式修改"></a>主题样式修改</h2><p>我应用的外观是Pisces，我的方式简单粗暴，直接利用浏览器的开发者工具找到相应要修改的样式，然后直接在themes \ next \ source \ css \ _custom中的custom.styl文件中添加css来覆盖原有颜色样式，如果你懂css这些应该so easy。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">body &#123; background:<span class="comment">#2E0008;&#125;//背景颜色</span></div><div class="line">.site-meta&#123; background:<span class="comment">#dd1031;&#125;//左上角标题栏颜色</span></div><div class="line">.site-title&#123; font-size:40px;&#125;//左上角标题栏字体尺寸</div><div class="line">.back-to-top&#123; background:<span class="comment">#dd1031;opacity:1;&#125;//右下角返回顶部样式</span></div><div class="line">.content-wrap &#123; background-image:url(<span class="string">'http://ooa3lxrpg.bkt.clouddn.com/1232.png?imageView2/0/q/75'</span>);background-repeat:no-repeat;background-position:right top;&#125;//右边区域背景</div><div class="line">.site-author-image &#123;//头像</div><div class="line">border-radius: 50%;//头像变为圆形</div><div class="line">-webkit-border-radius: 50%;</div><div class="line">-o-border-radius: 50%;</div><div class="line">-moz-border-radius: 50%;</div><div class="line">border: 5px solid <span class="comment">#dd1031;//头像边框尺寸 颜色</span></div><div class="line">&#125;</div><div class="line">.</div><div class="line">.</div><div class="line">.</div><div class="line">.</div><div class="line">.</div><div class="line">.</div></pre></td></tr></table></figure></p>
<p>所以你可以修改你想修改的所有样式。今天基本就写到这里了，这几天突然发现自己的知识太少了，突然好想静下心来好好学习学习。希望我们大家都可以一直进步。<br>下一篇继续hexo的优化，给你的博客添加评论，搜索等。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;继续叨叨叨&quot;&gt;&lt;a href=&quot;#继续叨叨叨&quot; class=&quot;headerlink&quot; title=&quot;继续叨叨叨&quot;&gt;&lt;/a&gt;继续叨叨叨&lt;/h2&gt;&lt;p&gt;上一篇介绍了hexo的安装和部署（还没部署的小伙伴&lt;a href=&quot;http://www.ccblog.win/20
    
    </summary>
    
      <category term="hexo博客搭建" scheme="http://www.ccblog.win/categories/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="css" scheme="http://www.ccblog.win/tags/css/"/>
    
      <category term="hexo" scheme="http://www.ccblog.win/tags/hexo/"/>
    
      <category term="next" scheme="http://www.ccblog.win/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>hexo个人博客搭建</title>
    <link href="http://www.ccblog.win/2017/03/12/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.ccblog.win/2017/03/12/hexo个人博客搭建/</id>
    <published>2017-03-12T00:15:23.000Z</published>
    <updated>2017-06-01T05:22:12.008Z</updated>
    
    <content type="html"><![CDATA[<h3 id="叨的叨叨以叨叨，那是什么叨"><a href="#叨的叨叨以叨叨，那是什么叨" class="headerlink" title="叨的叨叨以叨叨，那是什么叨"></a>叨的叨叨以叨叨，那是什么叨</h3><p>该说啥呢。。。博客不是第一次写，但在自己搭建的博客上写文章的确是第一次。十分兴奋。看着自己辛苦搭建出来的博客，一点一点达到自己心目中的样子，这种感觉只有做过的人才可以体会到。如果你还在犹豫，那就别墨迹了。废话不多说。<br>搭建自己的博客，当时我查的时候好多人推荐用Wordpress，既然这么多人推荐，那我就不用，怎么滴。好吧被看穿了，其实是我太穷了，没钱租服务器。虽然好像也可以免费做出来，这个不太清楚，因为没太了解。就在我茶不思饭不想的时候，我发现了Hexo，这个真是太符合我了。利用github来部署静态博客，谁叫咱们就是干前端的呢。啥也不说了，立马开干。 </p>
<h3 id="适合人群"><a href="#适合人群" class="headerlink" title="适合人群"></a>适合人群</h3><p>哈哈你来看这篇文章说明你就适合<br>使用windows的你们（其他系统差不多）</p>
<h3 id="安装必要程序"><a href="#安装必要程序" class="headerlink" title="安装必要程序"></a>安装必要程序</h3><h4 id="安装GIT"><a href="#安装GIT" class="headerlink" title="安装GIT"></a>安装GIT</h4><p>到<a href="https://git-for-windows.github.io/" target="_blank" rel="external"> msysgit</a>下载好后， 下一步下一步执行安装即可。<br>什么，下载太慢了，我含泪告诉你人这一生不翻几次墙是干不了大事的。</p>
<h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>到<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a>下载，左边稳定版，右边最新版，根据需要下载。推荐稳定版。安装的话，下一步还得下一步 非常简单。</p>
<h4 id="安装Hexo（我才是主人翁）"><a href="#安装Hexo（我才是主人翁）" class="headerlink" title="安装Hexo（我才是主人翁）"></a>安装Hexo（我才是主人翁）</h4><p>终于到我隆重出场了，鼠标右键任意位置，选择Git bash Here，输入npm 命令即可安装。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo -g</div></pre></td></tr></table></figure></p>
<p>好吧，我叫特简单。文件一般会安装到C:\Users\Administrator\AppData\Roaming\npm\node_modules下可通过下边npm命令具体查看：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm root -g</div></pre></td></tr></table></figure></p>
<p>安装好了就可以随便找个你喜欢的位置建个名叫hexo的文件夹，在这个文件夹里右键选择Git bash Here，分别输入hexo init和npm install（初始化文件和安装依赖包）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure>
<p>好了你应该已经看见效果了。接下来我们就要在网页中查看了，本地预览。分别输入g和s（生成静态网页和本地预览）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div></pre></td></tr></table></figure>
<p>上面的g和s其实generate和server的缩写，但是写缩写就够了，效果一样。如果出现<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure></p>
<p>哈哈你成功了，下一步在网页中打开localhost:4000就可以看到网页了，兴奋兴奋呀。现在本地已经OK了。下来我们要把它发布到网上让世界人民来观摩。</p>
<h3 id="注册github来部署博客"><a href="#注册github来部署博客" class="headerlink" title="注册github来部署博客"></a>注册github来部署博客</h3><h4 id="注册github"><a href="#注册github" class="headerlink" title="注册github"></a>注册<a href="https://github.com/" target="_blank" rel="external">github</a></h4><p>github应该很多人已经注册或正在注册的路上。我就不多说啥了。</p>
<h4 id="创建页面仓库"><a href="#创建页面仓库" class="headerlink" title="创建页面仓库"></a>创建页面仓库</h4><p><img src="http://ooa3lxrpg.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20170417212627.png" alt="Alt text"><br>选择New repository<br><img src="http://ooa3lxrpg.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20170417212833.png" alt="Alt text"><br>Repositoryname输入：你的账号名字.github.io，如（cspp01.github.io）。Description输入描述，最下面的选框Initialize this repository with a README可选可不选，建议选上。点击Create。好了，你在网上存放博客的地方也见好了。</p>
<h4 id="SSH密钥"><a href="#SSH密钥" class="headerlink" title="SSH密钥"></a>SSH密钥</h4><h5 id="生成SSH密钥"><a href="#生成SSH密钥" class="headerlink" title="生成SSH密钥"></a>生成SSH密钥</h5><p>还是右键点击Git base Here输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C <span class="string">"你的邮箱地址"</span></div></pre></td></tr></table></figure></p>
<p>按回车，按回车，按回车，你得按3边，成功，到C:\Users\Administrator.ssh下，可以看到两个文件，id_rsa是密钥 ，id_rsa.pub是公钥。</p>
<h5 id="建立连接"><a href="#建立连接" class="headerlink" title="建立连接"></a>建立连接</h5><p>回到github选择setting-&gt;SSH and GPG keys-&gt;右上角New SSH key<br><img src="http://ooa3lxrpg.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20170417214638.png" alt="Alt text"><br><img src="http://ooa3lxrpg.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20170417214722.jpg" alt="Alt text"><br><img src="http://ooa3lxrpg.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20170417215217.png" alt="Alt text"><br>title随便了，最好有意义点。打开刚才的id_rsa.pub，Ctrl+a-&gt;Ctrl+c，粘贴到key，Add SSH key，OK。</p>
<h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name <span class="string">"你的github用户名"</span></div><div class="line">git config --global user.email  <span class="string">"你的邮箱"</span></div></pre></td></tr></table></figure>
<h3 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h3><h4 id="config-yml配置文件"><a href="#config-yml配置文件" class="headerlink" title="_config.yml配置文件"></a>_config.yml配置文件</h4><p>这个文件在hexo根目录下，打开_config.yml配置文件，找到下面（在最下面）修改为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: 仓库地址</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>注意repo是你刚才新建的仓库的地址,复制粘贴上去就好OK了。还有注意冒号后面的空格必须。</p>
<h4 id="hexo部署"><a href="#hexo部署" class="headerlink" title="hexo部署"></a>hexo部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d</div></pre></td></tr></table></figure>
<p>最后出现<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO  Deploy <span class="keyword">done</span>: git</div></pre></td></tr></table></figure></p>
<p>说明成功<br>如果在执行 hexo d 后,出现的错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">error deployer not found:git</div></pre></td></tr></table></figure></p>
<p>请再次输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>然后再次执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div><div class="line">$ hexo d</div></pre></td></tr></table></figure></p>
<p>应该就可以了，如果还失败。请重新安装hexo重新部署。我第一次就是不管怎么样操作都部署失败，后来重新安装了一下就好了。就是这么神奇。<br>最后在浏览器输入你刚才新建仓库的名字：你的用户名.github.io（如cspp01.github.io）就可以访问了。<br>是不是很酷。</p>
<h3 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h3><p>你的博客文章都放在 source \ _posts 下，你如果要写新博客文章的话，可以手动在这个文件夹下创建.md文件。也可以通过命令创建：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"你的文章名字"</span></div></pre></td></tr></table></figure></p>
<p>然后再在你建好的.md文件里编辑文章。文章运用的是Markdowm（Markdown 是一种用来写作的轻量级「标记语言」）,还是很简单很好用的，其实你仿照hello world的那篇文章来写就可以。</p>
<h4 id="文章中加图片"><a href="#文章中加图片" class="headerlink" title="文章中加图片"></a>文章中加图片</h4><p>加图片可以先把图片上传到云端，推荐<a href="href=&quot;https://www.qiniu.com/&quot;">七牛</a>，然后在文章中加入了。<br>建好，编辑完，先在本地调试预览，在通过命令上传：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo g</div><div class="line">$ hexo s --debug</div><div class="line">$ hexo d</div></pre></td></tr></table></figure></p>
<p>好了，现在你新写的文章也上传上去了。上传上去立马刷新可能还不会作用到是因为会有一丝丝延迟，再刷新下就会好了。本地调试好后要上传记得每次都（每次上传最好先claer）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo g</div><div class="line">$ hexo d</div></pre></td></tr></table></figure></p>
<h3 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">hexo 安装</div><div class="line">$ hexo install hexo -g(安装hexo)</div><div class="line">$ hexo init(初始化)</div><div class="line">$ npm install(安装依赖包)</div><div class="line"></div><div class="line">服务器</div><div class="line">$ hexo s(开启本地服务，本地预览)</div><div class="line">$ hexo s --debug(以调试模式启动，对文件的更改无需停止网站只需刷新即可看到效果)</div><div class="line">$ hexo s -p 5000(更改端口)</div><div class="line"></div><div class="line">$ hexo clean(清除缓存)</div><div class="line">$ hexo d(上传部署)</div><div class="line"></div><div class="line">本地文件</div><div class="line">$ hexo g(重新生成本地文件)</div><div class="line"></div><div class="line">编辑文章</div><div class="line">$ hexo new <span class="string">"page"</span> (新建文章)</div></pre></td></tr></table></figure>
<p>这篇就到这里，下篇我们介绍怎么设置主题，和一些样式的修改自定义。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;叨的叨叨以叨叨，那是什么叨&quot;&gt;&lt;a href=&quot;#叨的叨叨以叨叨，那是什么叨&quot; class=&quot;headerlink&quot; title=&quot;叨的叨叨以叨叨，那是什么叨&quot;&gt;&lt;/a&gt;叨的叨叨以叨叨，那是什么叨&lt;/h3&gt;&lt;p&gt;该说啥呢。。。博客不是第一次写，但在自己搭建的博客上
    
    </summary>
    
      <category term="hexo博客搭建" scheme="http://www.ccblog.win/categories/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="http://www.ccblog.win/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.ccblog.win/2017/03/01/hello-world/"/>
    <id>http://www.ccblog.win/2017/03/01/hello-world/</id>
    <published>2017-03-01T00:15:23.000Z</published>
    <updated>2017-06-01T05:22:27.653Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
      <category term="hexo博客搭建" scheme="http://www.ccblog.win/categories/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="http://www.ccblog.win/tags/hexo/"/>
    
      <category term="next" scheme="http://www.ccblog.win/tags/next/"/>
    
  </entry>
  
</feed>
